@model AAAService.Models.service_tickets

@{
    ViewBag.Title = "Edit";
}

<h3>Edit AAA Service Request:@ViewBag.TicketNumber Created by @ViewBag.CreatedBy</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "" } })
                @Html.ValidationMessageFor(model => model.location_contact_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_phone_night, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_phone_night, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_phone_night, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cust_po_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cust_po_num, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "" } })
                @Html.ValidationMessageFor(model => model.cust_po_num, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cost_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cost_code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.cost_code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.problem_summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.problem_summary, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Name = "" } })
                @Html.ValidationMessageFor(model => model.problem_summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.problem_details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.problem_details, htmlAttributes: new { @class = "form-control", @rows = "6", @readonly = "readonly" })
                 
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Add Details", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("ProbSum", htmlAttributes: new { @class = "form-control", @rows = "3" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.notes, htmlAttributes: new { @class = "form-control", @rows = "6", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.internal_notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.internal_notes, htmlAttributes: new { @class = "form-control", @rows = "7" })
                    @Html.ValidationMessageFor(model => model.internal_notes, "", new { @class = "text-danger" })
                </div>
            </div>
        }








        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    <h3>Uploaded Files</h3>
    <table class="table">
        <tr>
            <th>
                File Name
            </th>
            <th>
                Date Uploaded
            </th>
            <th>
                File Size
            </th>
            <th>
            </th>
        </tr>
        @if (ViewBag.FileList != null)
        {
            foreach (var myfile in ViewBag.FileList)

            {
                <tr>
                    <td>@myfile.file_name</td>
                    <td>@myfile.date_in.ToString()</td>
                    <td>@myfile.file_size.ToString()</td>
                    <td>
                        @Html.ActionLink("Download", "Download", new { id = @myfile.guid })

                    </td>
                </tr>

            }
        }
        
       
       

    </table>
}

@using (Html.BeginForm("Upload", "ServiceTickets", new { isEdit = true, serviceLocationGuidOrServiceTicketId = ViewBag.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<fieldset>
    <legend>Upload new File</legend>
    <div class="editor-field">
        @Html.TextBox("file", "", new { type = "file" })
    </div>
    <div class="editor-field">
        <input type="submit" value="Upload" />
    </div>
</fieldset>
}

<div>
    @Html.RouteLink("Back to List", new { controller = "ServiceBoard", action = "Index", id = "" })
</div>
