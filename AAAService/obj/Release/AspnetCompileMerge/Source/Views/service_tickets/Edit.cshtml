@model AAAService.Models.service_tickets

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Service Ticket</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.guid)
            @Html.HiddenFor(model => model.job_number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.order_datetime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.parent_company_guid, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.created_by_user_guid, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.priority_code, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.status_code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.PriorityID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.StatusID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.complete_datetime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.last_update_datetime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.service_location_guid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.last_updated_by_user_guid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cust_po_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cust_po_num, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cust_po_num, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_phone_night, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_phone_night, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_phone_night, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.problem_summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.problem_summary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.problem_summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.problem_details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.problem_details, new { @rows = 4, @cols = 40, @class = "form-control" })
                @Html.ValidationMessageFor(model => model.problem_details, "", new { @class = "text-danger" })
            </div>
        </div>

        

       <div class="form-group">
            @Html.LabelFor(model => model.closed_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.closed_datetime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.closed_datetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.active)
                    @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cost_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cost_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cost_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EQmodel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EQmodel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EQmodel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EQserial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EQserial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EQserial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EQProbDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EQProbDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EQProbDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.service_provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.service_provider, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.service_provider, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dispatch_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dispatch_datetime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dispatch_datetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.accepted_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.accepted_datetime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.accepted_datetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.internal_notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.internal_notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.internal_notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.total_billing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.total_billing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.total_billing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PriorityStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriorityStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriorityStatus, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.StatusName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatusName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
