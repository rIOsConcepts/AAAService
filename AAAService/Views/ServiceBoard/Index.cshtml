@model IEnumerable<AAAService.Models.service_boardNew>

@using GridMvc.Html
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="~/Scripts/jquery-2.2.0.min.js"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
@*<script src="@Url.Content("~/Scripts/gridmvc.customwidgets.js")"></script>*@

@{
    ViewBag.Title = "Index";
}

<h2>Service Board</h2>
<hr />

<div style="width:auto">
@Html.Grid(Model).Columns(columns =>
{
    /* Adding not mapped column, that renders body, using inline Razor html helper */
    /*columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(d =>
            @<b>
                @Html.ActionLink("Edit", "Index")
            </b>);*/
    columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.RouteLink("Edit", new { controller = "ServiceTickets", action = "Edit", id = c.guid }));
    // columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink("Edit", "service_tickets", new { id = c.guid }));
    columns.Add().Titled("Details").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.RouteLink("Details", new { controller = "ServiceTickets", action = "Details", id = c.guid }));


    /* Adding "Job#" column: */
    columns.Add(o => o.job_number)
                .Titled("Job #")
                .Filterable(true)
                .SetWidth(100);

    /* Adding "Priority" column: */
    columns.Add(o => o.Priority)
            .Titled("Priority")
            .Filterable(true)
            .SetWidth(125);

    /* Adding "Status" column: */
    columns.Add(o => o.Status)
            .Titled("Status")
            .Filterable(true)
            //.SetFilterWidgetType("CustomStatusFilterWidget")
            .SetWidth(125);

    /* Adding "Location" column: */
    columns.Add(o => o.company_name)
            .Filterable(true)
            .Titled("Company");

    /* Adding "Location" column: */
    columns.Add(o => o.service_location_name)
            .Filterable(true)
            .Titled("Service Location");

    /* Adding "Cost Center" column: */
    columns.Add(o => o.cost_code)
            .Filterable(true)
            .Titled("Cost Center");

    /* Adding "Region" column: */
    columns.Add(o => o.region)
            .Filterable(true)
            .Titled("Region");

    /* Adding "City" column: */
    columns.Add(o => o.city)
            .Filterable(true)
            .Titled("City");

    /* Adding "Service Category" column: */
    columns.Add(o => o.category)
            .Filterable(true)
            .Titled("Service Category");

    /* Adding "Problem Summary" column: */
    columns.Add(o => o.problem_summary)
            .Titled("Problem Summary")
            .SetWidth(250);

    /* Adding "Date Requested" column: */
    columns.Add(o => o.order_datetime)
            .Titled("Date Requested")
            .RenderValueAs(o => string.Format("{0:MM/dd/yyyy}", o.order_datetime))
            .Filterable(true)
            .SetWidth(80);

    /* Adding "Date Dispatched" column: */
    columns.Add(o => o.dispatch_datetime)
            .Titled("Date Dispatched")
            .Format("{0:MM/dd/yyyy}")
            .Filterable(true)
            .SetWidth(110);

    /* Adding "Date Completed" column: */
    columns.Add(o => o.complete_datetime)
            .Titled("Date Completed")
            .Format("{0:MM/dd/yyyy}")
            .Filterable(true)
            .SetWidth(110);


    /* Adding "Service Provider" column: */
    columns.Add(o => o.service_provider)
            .Titled("Service Provider")
            .Filterable(true)
            .SetWidth(150);

    /* Adding "Customer PO#" column: */
    columns.Add(o => o.cust_po_num)
            .Titled("Customer PO#")
            .Filterable(true)
            .SetWidth(150);


}).WithPaging(20).Sortable().Filterable().WithMultipleFilters()
</div>

@*<script>
    $(function () {
        pageGrids.ordersGrid.addFilterWidget(new CustomersFilterWidget());

        pageGrids.ordersGrid.onRowSelect(function (e) {
            $.post("/Home/GetOrder?id=" + e.row.OrderID, function (data) {
                if (data.Status <= 0) {
                    alert(data.Message);
                    return;
                }
                $("#order-content").html(data.Content);
            });
        });
    });
</script>*@