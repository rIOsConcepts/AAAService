@*@model Tuple<AAAService.Models.service_tickets, AAAService.Models.service_tickets>*@
@model AAAService.Models.service_tickets

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

@*<style>
    .editableBox {
        width: 75px;
        height: 30px;
    }

    .timeTextBox {
        width: 400px;
        margin-left: 0px;
        height: 20px;
        border: none;
    }
</style>*@

@{
    ViewBag.Title = "Create";
}

<h2>AAA Service Request</h2>
<h4>Create a Service Request </h4>
<p><strong>Please report emergency service issues occurring prior to 8:00 a.m. and after 5:00 p.m. Monday - Friday, Saturday - Sunday, and on holidays by calling 1-877-7AAAHELP P: 877-722-2435 and creating this service request
</strong> </p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @*@Html.LabelFor(tuple => tuple.item2.CompanyID, "Company", htmlAttributes: new { @class = "control-label col-md-2" })*@
            @*@Html.LabelFor(model => model.CompanyID, "Company", htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CompanyList", null, "Please Choose", htmlAttributes: new { @id = "CompanyList", @class = "form-control", @onchange = "javascript:GetServiceLocation(this.value);" })*@
                @Html.TextBoxFor(model => model.Company, new { @class = "form-control", @readonly = true })
                @*@Html.DropDownListFor(tuple => tuple.Item1.StateModel, new SelectList(Model.Item1.StateModel, "Id", "StateName"), new { @id = "ddlcompany", @style = "width:200px;", @onchange = "javascript:GetServiceLocation(this.value);" })*@
                @*@Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })*@
            </div>
        </div>
        @if (User.IsInRole("CorpAdmin") || bool.Parse(TempData.Peek("SeveralLocations").ToString()))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Location, "Service Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("LocationID", null, "Please Choose", htmlAttributes: new { @class = "form-control" })*@                    
                    <select class="form-control" id="ddlservicelocation" name="ddlservicelocation" style="width: 200px" onchange = "javascript:SetServiceLocation(this.value)"></select>
                    @*@Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })*@
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Location, "Service Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @readonly = true })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label((string)@ViewBag.Address, htmlAttributes: new { @class = "form-control", @id = "Address", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label((string)@ViewBag.City, htmlAttributes: new { @class = "form-control", @id = "City", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Zip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label((string)@ViewBag.Zip, htmlAttributes: new { @class = "form-control", @id = "Zip", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_name, new { htmlAttributes = new { @Value = ViewBag.FullName, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.location_contact_phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location_contact_phone, new { htmlAttributes = new { @Value = ViewBag.DayPhone, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location_contact_phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="monikersam" style="display:none" ;>
            <div class="form-group">
                @Html.Label("Service Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("SvcCat", htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
            <div class="form-group">
                @Html.Label("Priority Level", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("PriStatus", htmlAttributes: new { @class = "form-control" })

                </div>
            </div>
        </div>
            <div class="form-group">
                @Html.LabelFor(model => model.location_contact_phone_night, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.location_contact_phone_night, new { htmlAttributes = new { @Value = ViewBag.NightPhone , @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.location_contact_phone_night, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cust_po_num, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cust_po_num, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cust_po_num, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cost_code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cost_code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cost_code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PriorityID, "Priority Level", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PriorityID", null, "Please Choose", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PriorityID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, "Service Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryID", null, "Please Choose", htmlAttributes: new { @id = "CategoryID", @class = "form-control" })
                    @*@Html.DropDownList("CategoryID", null, "Please Choose", htmlAttributes: new { @id = "CategoryID", @class = "timeTextBox" })*@
                    @*<input class="timeTextBox" name="timebox" maxlength="30" />*@
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div id="EQ" display none;>
                <div class="form-group">
                    @Html.LabelFor(model => model.EQmodel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EQmodel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EQmodel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EQserial, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EQserial, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EQserial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EQProbDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EQProbDesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EQProbDesc, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.problem_summary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.problem_summary, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                    @Html.ValidationMessageFor(model => model.problem_summary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.problem_details, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.problem_details, htmlAttributes: new { @class = "form-control", @rows = "10" })
                    @Html.ValidationMessageFor(model => model.problem_details, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" id="submitt3" class="btn btn-success" />
                </div>
            </div>
        </div>

        <h3>Uploaded Files</h3>
        <table class="table">
            <tr>
                <th>
                    File Name
                </th>
                <th>
                    Date Uploaded
                </th>
                <th>
                    File Size
                </th>
                <th>
                </th>
            </tr>

            @if (ViewBag.FileList != null)
            {
                foreach (var myfile in ViewBag.FileList)
                {
                    <tr>
                        <td>@myfile.file_name</td>
                        <td>@myfile.date_in.ToString()</td>
                        <td>@myfile.file_size.ToString()</td>
                        <td>
                            @Html.ActionLink("Download", "Download", new { id = @myfile.guid })

                        </td>
                    </tr>

                }
            }
        </table>
}

@using (Html.BeginForm("Upload", "ServiceTickets", new { isEdit = false, serviceLocationGuidOrServiceTicketId = ViewBag.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Upload new File</legend>
        <div class="editor-field">
            @Html.TextBox("file", "", new { type = "file" })
        </div>
        <div class="editor-field">
            <input type="submit" value="Upload" />
        </div>
    </fieldset>
}

<div>
    @Html.RouteLink("Back to List", new { controller = "ServiceBoard", action = "Index", id = "" })
</div>

<script>
$(document).ready(function(){
    $("#CategoryID").change(function(){
        $(this).find("option:selected").each(function(){
            if($(this).attr("value")=="19"){
                $("#EQ").show();
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);


            }
            else if($(this).attr("value")=="20"){
                alert("ALERT:\n\nService calls for copiers, printers, fax, scanners, and multifunciton equipment are submitted through AMNET/ServiceDesk portal.");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }

            else if ($(this).attr("value") < "1") {
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
               $('#SvcCat').text(newText);
               $("#EQ").hide();

            }
            else if($(this).attr("value")=="21"){
                $("#EQ").show();
                alert("Service requests for Cummins brand equipment should be reported directly to Cummins:\n\nLocations within San Diego, Imperial County, Orange County and San Bernardino contact number is (888)505-7807\n\nAll other bank locations contact number is (818) 841-9692");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "22") {
                $("#EQ").show();
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "41") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "35") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("NOTE:\n\nIf serivce request is not an emergency, please log the request on the AAA Facility Maintenance binder for your location.\n\nPlease see Schedule of Service / Maintenance Calendar for service dates. \n\n By submitting a service request via this portal, a service charge will apply.");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "38") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("NOTE:\n\nTo report an issue with janitorial service, please report the issue via the Submit a Comment link.");
                var newText ="";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "4") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("We do no handle these type of service requests.\n\nService requests are submitted on the Project Manager/Help Desk link accessed through AMNET/All Tools");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "16") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("We do no handle these type of service requests. To submit a service request, please contact:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n\nOR\n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "10") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("Please submit a BID REQUEST for construction type service requests.\n\nTo further discuss construction requests you may also email General Services Facilities Department.");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "15") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "15") {
                $("#EQ").hide();
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "25") {
                $("#EQ").hide();
                alert("ALERT\N\N Please contact the Human Resources Benifits staff to request an ergonomic evaluation");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "52") {
                $("#EQ").hide();
                alert("ALERT\n\n We do not handle these type of requests. Please email your service request to Information Services.");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
        });
    }).change();
});
$(document).ready(
  function() {
  $("#monikersam").hide();
  $("#PriorityID").change(function () {
      $(this).find("option:selected");
      var newText = $("#PriorityID option:selected").text();
      $('#PriStatus').text(newText);
      $("#monikersam").hide();
  })

  //$(document).ready(function () {

  //    $(".editableBox").change(function () {
  //        $(".timeTextBox").val($(".editableBox option:selected").html());
  //    });
  //});

  GetServiceLocation("@ViewBag.CompanyGUID");
});
</script>

<script language="javascript" type="text/javascript">
    function GetServiceLocation(_companyGUID) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ddlservicelocation").html(procemessage).show();
        var url = "/ServiceTickets/GetServiceLocation/";

        $.ajax({
            url: url,
            data: { companyGUID: _companyGUID },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";

                if ("@TempData.Peek("LocationGuid")" == "") {
                    markup = "<option value='0' selected>Please Choose</option>";
                }
                else {
                    markup = "<option value='0'>Please Choose</option>";
                }

                for (var x = 0; x < data.length; x++) {
                    if (data[x].Value == "@TempData.Peek("LocationGuid")") {
                        markup += "<option value=" + data[x].Value + " selected>" + data[x].Text + "</option>";
                    }
                    else {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                }

                $("#ddlservicelocation").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function SetServiceLocation(_locationGUID) {
        var url = "/ServiceTickets/SetServiceLocation/";

        $.ajax({
            url: url,
            data: { locationGUID: _locationGUID },
            cache: false,
            type: "POST",
            success: function (data) {
                $("#Address").val = data.Address;
                $("#City").val = data.City;
                $("#Zip").val = data.Zip;
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>