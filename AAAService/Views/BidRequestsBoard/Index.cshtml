@model IEnumerable<AAAService.Models.Bid_Requests_View>
@using GridMvc.Html
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="~/Scripts/jquery-2.2.0.min.js"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.customwidgets.js")"></script>

@{
    ViewBag.Title = "Index";
}

<h2>Bid Requests Board</h2>
<hr />

<div style="width:auto">
    @Html.Grid(Model).Named("bidRequestBoard").Columns(columns =>
{
    /* Adding not mapped column, that renders body, using inline Razor html helper */
    /*columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(d =>
            @<b>
                @Html.ActionLink("Edit", "Index")
            </b>);*/
    columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.RouteLink("Edit", new { controller = "BidRequests", action = "Edit", id = c.guid }));
    // columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink("Edit", "service_tickets", new { id = c.guid }));
    columns.Add().Titled("Details").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.RouteLink("Details", new { controller = "BidRequests", action = "Details", id = c.guid }));

    /* Adding "Company" column: */
    columns.Add(o => o.Parent_Location_Name)
            .Filterable(true)
            .Titled("Company");


    /* Adding "Job#" column: */
    columns.Add(o => o.bid_num)
                .Titled("Bid Request #")
                .Filterable(true)
                .SetWidth(100);

    /* Adding "Date Requested" column: */
    columns.Add(o => o.Order_Date)
            .Titled("Date Requested")
            .RenderValueAs(o => string.Format("{0:MM/dd/yyyy}", o.Order_Date))
            .Filterable(true)
            .SetWidth(80);

    /* Adding "Location" column: */
    columns.Add(o => o.Service_Location_Name)
            .Filterable(true)
            .Titled("Service Location");

    /* Adding "Request Summary" column: */
    columns.Add(o => o.problem_summary)
            .Titled("Request Summary")
            .SetWidth(250);


    /* Adding "Status" column: */
    columns.Add(o => o.StatusName)
            .Titled("Status")
            .Sortable(true)
            .Filterable(true)
            .SetFilterWidgetType("CustomStatusFilterWidget")
            .SetWidth(125);

}).WithPaging(20).Sortable(true)
</div>

<script>
    $(document).ready(function(){
        pageGrids.bidRequestBoard.addFilterWidget(new StatusesFilterWidget());
    });
</script>