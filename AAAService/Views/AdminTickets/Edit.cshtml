@*@model AAAService.Models.service_tickets*@
@model AAAService.Models.TupleAlternative

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>

@{
    ViewBag.Title = "Edit";
}

<h3>Edit AAA Service Request: @ViewBag.TicketNumber   Created by @ViewBag.CreatedBy</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Administrator Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.service_location_guid, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationDD", null, null, htmlAttributes: new { @class = "form-control", @onchange = "javascript:SetServiceLocation(this.value)" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.service_location_guid, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="Addressline1" class="form-group" @(Model.LocationInfo.addressline1 == null ? "style=display:none" : "")>
            @Html.LabelFor(model => model.LocationInfo.addressline1, "Address 1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LocationInfo.addressline1, new { @class = "form-control", @readonly = true })
            </div>
        </div>
        <div id="Addressline2" class="form-group" @(Model.LocationInfo.addressline1 == null ? "style=display:none" : "")>
            @Html.LabelFor(model => model.LocationInfo.addressline2, "Address 2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LocationInfo.addressline2, new { @class = "form-control", @readonly = true })
            </div>
        </div>
        <div id="City" class="form-group" @(Model.LocationInfo.addressline1 == null ? "style=display:none" : "")>
            @Html.LabelFor(model => model.LocationInfo.city, "City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LocationInfo.city, new { @class = "form-control", @readonly = true })
            </div>
        </div>
        <div id="Zip" class="form-group" @(Model.LocationInfo.addressline1 == null ? "style=display:none" : "")>
            @Html.LabelFor(model => model.LocationInfo.zip, "Zip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LocationInfo.zip, new { @class = "form-control", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.StatusID, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusID", null, htmlAttributes: new { @id = "StatusID", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.StatusID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.accepted_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.accepted_datetime, new { htmlAttributes = new { @class = "form-control",
               @onclick = "javascript:SetStatus(1);" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.accepted_datetime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.dispatch_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.dispatch_datetime, new { htmlAttributes = new { @class = "form-control",
               @onclick = "javascript:SetStatus(6);" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.dispatch_datetime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.complete_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.complete_datetime, new { htmlAttributes = new { @class = "form-control",
               @onclick = "javascript:SetStatus(5);" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.complete_datetime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.service_provider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.service_provider, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.service_provider, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="monikersam" style = "display:none";>
            <div class="form-group">
                @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("mStatusName", htmlAttributes: new {@value = ViewBag.StatusName, @class = "form-control" })

                </div>
            </div>
            <div class="form-group">
                @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("mLocationName", htmlAttributes: new {@Value = ViewBag.LocationName, @class = "form-control" })

                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.cost_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.cost_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.cost_code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.cust_po_num, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.cust_po_num, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.cust_po_num, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.total_billing, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.total_billing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.total_billing, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.location_contact_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.location_contact_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.location_contact_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.location_contact_phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.location_contact_phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.location_contact_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.location_contact_phone_night, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.location_contact_phone_night, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.location_contact_phone_night, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.PriorityStatus, "Priority Level", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PriorityID", null, "Please Choose", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.PriorityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.ServiceCategory, "Service Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, "Please Choose", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="EQ" display none;>
            <div class="form-group">
                @Html.LabelFor(model => model.ServiceTickets.EQmodel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServiceTickets.EQmodel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceTickets.EQmodel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServiceTickets.EQserial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServiceTickets.EQserial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceTickets.EQserial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServiceTickets.EQProbDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServiceTickets.EQProbDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceTickets.EQProbDesc, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.problem_summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.problem_summary, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.problem_summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.problem_details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ServiceTickets.problem_details, htmlAttributes: new { @class = "form-control", @rows = "7", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.problem_details, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Add Details", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("ProbSum", htmlAttributes: new { @class = "form-control", @rows = "3" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ServiceTickets.notes, htmlAttributes: new { @class = "form-control", @rows = "7", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ServiceTickets.notes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Add Note", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("ResNotes", htmlAttributes: new { @class = "form-control", @rows = "3" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.closed_datetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTickets.closed_datetime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTickets.closed_datetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ServiceTickets.active)
                    @Html.ValidationMessageFor(model => model.ServiceTickets.active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTickets.internal_notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ServiceTickets.internal_notes, htmlAttributes: new { @class = "form-control", @rows = "7"})
                @Html.ValidationMessageFor(model => model.ServiceTickets.internal_notes, "", new { @class = "text-danger" })
            </div>
        </div>

        
        
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
        <h3>Uploaded Files</h3>
        <table class="table">
            <tr>
                <th>
                    File Name
                </th>
                <th>
                    Date Uploaded
                </th>
                <th>
                    File Size
                </th>
                <th>
                </th>
            </tr>
            @if (ViewBag.FileList != null)
            {
                foreach (var myfile in ViewBag.FileList)

                {
                    <tr>
                        <td>@myfile.file_name</td>
                        <td>@myfile.date_in.ToString()</td>
                        <td>@myfile.file_size.ToString()</td>
                        <td>
                            @Html.ActionLink("Download", "Download", new { id = @myfile.guid })

                        </td>
                    </tr>

                }
            }




        </table>
}

@using (Html.BeginForm("Upload", "AdminTickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Upload new File</legend>
        <div class="editor-field">
            @Html.TextBox("file", "", new { type = "file" })
        </div>
        <div class="editor-field">
            <input type="submit" value="Upload" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts {
    <script type="text/javascript">
        $(function () {
            $('#ServiceTickets_accepted_datetime').datetimepicker({
                defaultDate: '@Model.ServiceTickets.accepted_datetime',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top'
            });
            $('#ServiceTickets_dispatch_datetime').datetimepicker({
                defaultDate: '@Model.ServiceTickets.dispatch_datetime',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
                
            });
            $('#ServiceTickets_complete_datetime').datetimepicker({
                defaultDate: '@Model.ServiceTickets.complete_datetime',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
               
            });
            $('#ServiceTickets_closed_datetime').datetimepicker({
                defaultDate: '@Model.ServiceTickets.closed_datetime',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
            });
        });
    </script>
}
<script>
$(document).ready(
  function() {
  $("#monikersam").hide();
  $("#StatusID").change(function () {
      $(this).find("option:selected");
      var newText = $("#StatusID option:selected").text();
      $('#mStatusName').text(newText);
      $("#monikersam").hide();
  })
  });

$(document).ready(
function () {
    $("#monikersam").hide();
    $("#LocationDD").change(function () {
        $(this).find("option:selected");
        var newText = $("#LocationDD option:selected").text();
        $('#mLocationName').text(newText);
        $("#monikersam").hide();
    })
});

$(document).ready(
function() {
    $("#monikersam").hide();
    $("#PriorityID").change(function () {
        $(this).find("option:selected");
        var newText = $("#PriorityID option:selected").text();
        $('#PriStatus').text(newText);
        $("#monikersam").hide();
    })
});

$(document).ready(function () {
    $("#CategoryID").change(function () {
        $(this).find("option:selected").each(function () {
            if ($(this).attr("value") == "19") {
                $("#EQ").show();
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "20") {
                alert("ALERT:\n\nService calls for copiers, printers, fax, scanners, and multifunciton equipment are submitted through AMNET/ServiceDesk portal.");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }

            else if ($(this).attr("value") < "1") {
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $("#EQ").hide();

            }
            else if ($(this).attr("value") == "21") {
                $("#EQ").show();
                alert("Service requests for Cummins brand equipment should be reported directly to Cummins:\n\nLocations within San Diego, Imperial County, Orange County and San Bernardino contact number is (888)505-7807\n\nAll other bank locations contact number is (818) 841-9692");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "22") {
                $("#EQ").show();
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "41") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                //alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please contact Physical Security by phoning the (805) 352-1444 Option 5\n\n OR \n\nCorporate Security\nfm.us.rna.PhysicalSecurity@rabobank.com");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "35") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("NOTE:\n\nIf serivce request is not an emergency, please log the request on the AAA Facility Maintenance binder for your location.\n\nPlease see Schedule of Service / Maintenance Calendar for service dates. \n\n By submitting a service request via this portal, a service charge will apply.");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "38") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("NOTE:\n\nTo report an issue with janitorial service, please report the issue via the Submit a Comment link.");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "4") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("We do no handle these type of service requests.\n\nService requests are submitted on the Project Manager/Help Desk link accessed through AMNET/All Tools");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "16") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                //alert("We do no handle these type of service requests. To submit a service request, please contact:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n\nOR\n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                alert("We do no handle these type of service requests. To submit a service request, please contact:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n\nOR\n\nCorporate Security\nfm.us.imperial.Security Support Desk");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "10") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                alert("Please submit a BID REQUEST for construction type service requests.\n\nTo further discuss construction requests you may also email General Services Facilities Department.");
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "15") {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                //alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please contact Physical Security by phoning the (805) 352-1444 Option 5\n\n OR \n\nCorporate Security\nfm.us.rna.PhysicalSecurity@rabobank.com");
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "15") {
                $("#EQ").hide();
                //alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please report the issue by contacting:\n\nValliwide Vault & Safe\n4191 W. Swift Ave.\nFresno, CA 93722\n559-291-2971\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                //alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please contact Physical Security by phoning the (805) 352-1444 Option 5\n\n OR \n\nCorporate Security\n888-337-4744\nfm.us.imperial.Security Support Desk");
                alert("ALERT\n\nIf this service request is related to locksmith and or alarm issues, please contact Physical Security by phoning the (805) 352-1444 Option 5\n\n OR \n\nCorporate Security\nfm.us.rna.PhysicalSecurity@rabobank.com");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
            else if ($(this).attr("value") == "25") {
                $("#EQ").hide();
                alert("ALERT\N\N Please contact the Human Resources Benifits staff to request an ergonomic evaluation");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else if ($(this).attr("value") == "52") {
                $("#EQ").hide();
                alert("ALERT\n\n We do not handle these type of requests. Please email your service request to Information Services.");
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = "";
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', true);
            }
            else {
                $("#EQ").hide();
                var blankText = "";
                $('#EQmodel').val(blankText)
                $('#EQserial').val(blankText)
                $('#EQProbDesc').val(blankText)
                var newText = $("#CategoryID option:selected").text();
                $('#SvcCat').text(newText);
                $('input[type="submit"]').prop('disabled', false);
            }
        });
    }).change();
});

function SetStatus(_statusID) {
    $("#StatusID").val(_statusID);
    var newText = $("#StatusID option:selected").text();
    $('#mStatusName').text(newText);
}

function SetServiceLocation(_locationGUID) {
    var url = "/AdminTickets/SetServiceLocation/";

    $.ajax({
        url: url,
        data: { locationGUID: _locationGUID },
        cache: false,
        type: "POST",
        success: function (data) {
            if (data != "") {
                $("#Addressline1").show();
                $("#LocationInfo_addressline1").val(data.addressline1);
                $("#Addressline2").show();
                $("#LocationInfo_addressline2").val(data.addressline2);
                $("#City").show();
                $("#LocationInfo_city").val(data.city);
                $("#Zip").show();
                $("#LocationInfo_zip").val(data.zip);
            }
            else {
                $("#Addressline1").hide();
                $("#Addressline2").hide();
                $("#City").hide();
                $("#Zip").hide();
            }
        },
        error: function (reponse) {
            alert("error : " + reponse);
        }
    });
}
</script>