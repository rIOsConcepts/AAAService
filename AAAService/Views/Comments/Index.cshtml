@model IEnumerable<AAAService.Models.error_and_comments_view>
@using GridMvc.Html
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="~/Scripts/jquery-2.2.0.min.js"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

@{
    ViewBag.Title = "Index";
}

<h2>Manage Comments</h2>

<p></p>
    <div style="width:auto">
        @Html.Grid(Model).Columns(columns =>
   {
       /* Adding not mapped column, that renders body, using inline Razor html helper */
       /*columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .RenderValueAs(d =>
               @<b>
                   @Html.ActionLink("Edit", "Index")
               </b>);*/


       columns.Add().Titled("Details").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink("Details", "Details", new { id = c.guid }));
       columns.Add().Titled("Edit").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink("Edit", "Edit", new { id = c.guid }));
       columns.Add().Titled("Delete").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink("Delete", "Delete", new { id = c.guid }));

       /* Adding "Name" column: */
       columns.Add(o => o.comments)
                  .Titled("Comments")
                  .Filterable(true)
                  .SetWidth(100);
       columns.Add(o => o.notes)
                   .Titled("Notes")
                   .Filterable(true)
                   .SetWidth(100);
       /* Adding "Address1: */
       columns.Add(o => o.comment_datetime)
               .Titled("Date")
               .RenderValueAs(o => string.Format("{0:MM/dd/yyyy}", o.comment_datetime))
               .Filterable(true)
               .SetWidth(125);

       /* Adding "Active" column: */
       columns.Add(o => o.active)
               .Titled("Active")
               .Filterable(true)
               .SetWidth(125);

       /* Adding "Rating" column: */
       columns.Add(o => o.ratings)
               .Filterable(true)
               .Titled("Rating");

       /* Adding "User Name" column: */
       columns.Add(o => o.user_full_name)
               .Filterable(true)
               .Titled("User Name");

       /* Adding "Location" column: */
       columns.Add(o => o.service_location)
               .Filterable(true)
               .Titled("Location");
   }).WithPaging(20).Sortable(true)
</div>